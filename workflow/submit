#!/bin/bash

set -e

TOP_DIR=`dirname $0`/..
TOP_DIR=`cd $TOP_DIR && pwd`

cd $TOP_DIR/workflow

if [ ! -e "$TOP_DIR/workflow/inputs/buildings.csv" ]; then
    echo "Please put a buildings.csv file in the inputs/ directory"
    exit 1
fi
if [ ! -e "$TOP_DIR/workflow/inputs/parcels.csv" ]; then
    echo "Please put a parcels.csv file in the inputs/ directory"
    exit 1
fi

EXEC_SITE=$1
if [ "x$EXEC_SITE" = "x" ]; then
    EXEC_SITE="condorpool"
fi
if [ ! -e "sites/$EXEC_SITE/sites.xml" ]; then
    echo "The $EXEC_SITE execution sites does not exist"
    exit 1
fi

# tar up some of the inputs - this is to lower the load on 
# filesystmes such as TACC's $SCRATCH
(cd ../createDL && tar czf DL-data.tar.gz data)

export RUN_ID=designsafe_`date +'%Y%m%d_%H%M%S'`

export RUN_DIR=/local-scratch/$USER/workflows/$RUN_ID
mkdir -p $RUN_DIR

# generate the dax
export PYTHONPATH=`pegasus-config --python`
PEGASUS_BIN_DIR=`which pegasus-config`
PEGASUS_BIN_DIR=`dirname $PEGASUS_BIN_DIR`
./dax-generator $PEGASUS_BIN_DIR $TOP_DIR $RUN_ID $RUN_DIR
mv dax.xml $RUN_DIR/

echo
echo "An outputs directory will be created within the base of the workflow directory."
echo "Directory: $RUN_DIR/outputs"


# plan and submit the  workflow
echo
pegasus-plan \
    -Dpegasus.catalog.site.file=$TOP_DIR/workflow/sites/$EXEC_SITE/sites.xml \
    --conf pegasus.conf \
    --relative-dir $RUN_ID \
    --sites $EXEC_SITE \
    --output-site local \
    --cleanup leaf \
    --dir $RUN_DIR/workflow \
    --dax $RUN_DIR/dax.xml \
    --submit

#    --cluster label \
